{
  "contractName": "EthPrice",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "ethPriceUsd",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogNewEthPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806316061dbf1461006757806327dc297e1461009257806338bbfa5014610109578063a2e62045146101c6575b600080fd5b34801561007357600080fd5b5061007c6101d0565b6040518082815260200191505060405180910390f35b34801561009e57600080fd5b506101076004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506101d6565b005b34801561011557600080fd5b506101c46004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610331565b005b6101ce610336565b005b60055481565b6101de610488565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610280576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616c6c6572206973206e6f74204f7261636c697a652100000000000000000081525060200191505060405180910390fd5b7f13f6c146341f01b18567c39d285d72a1fed28b0731c5dfa67c925b22abfa858b816040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390a16103278160026107e6565b6005819055505050565b505050565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260358152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e000000000000000000000081525060400191505060405180910390a16104856040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604181526020017f6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f763281526020017f2f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e81526020017f7400000000000000000000000000000000000000000000000000000000000000815250610ada565b50565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104f8575060006104f66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661107c565b145b15610509576105076000611087565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506040513d60208110156105b857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610720576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d60208110156106ce57600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050506040513d60208110156107d057600080fd5b8101908080519060200190929190505050905090565b6000606060008060008693506000925060009150600090505b8351811015610abb5760307f010000000000000000000000000000000000000000000000000000000000000002848281518110151561083a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015610952575060397f01000000000000000000000000000000000000000000000000000000000000000284828151811015156108e257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15610a0357811561097557600086141561096b57610abb565b8580600190039650505b600a830292506030848281518110151561098b57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250610aae565b602e7f0100000000000000000000000000000000000000000000000000000000000000028482815181101515610a3557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610aad57600191505b5b80806001019150506107ff565b6000861115610acd5785600a0a830292505b8294505050505092915050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610b4c57506000610b4a6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661107c565b145b15610b5d57610b5b6000611087565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610be257600080fd5b505af1158015610bf6573d6000803e3d6000fd5b505050506040513d6020811015610c0c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d74576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050506040513d6020811015610d2257600080fd5b8101908080519060200190929190505050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610e1e578082015181840152602081019050610e03565b50505050905090810190601f168015610e4b5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b505050506040513d6020811015610e9457600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610eca5760006001029150611075565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610f82578082015181840152602081019050610f67565b50505050905090810190601f168015610faf5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610fe8578082015181840152602081019050610fcd565b50505050905090810190601f1680156110155780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561103657600080fd5b505af115801561104a573d6000803e3d6000fd5b50505050506040513d602081101561106157600080fd5b810190808051906020019092919050505091505b5092915050565b6000813b9050919050565b6000611091611098565b9050919050565b6000806110b8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed61107c565b111561115957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111506040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611527565b60019050611524565b600061117873c03a2615d5efaf5f49f60b7bb6583eaec212fdf161107c565b11156112195773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112106040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611527565b60019050611524565b600061123873b7a07bcf2ba2f2703b24c0691b5278999c59ac7e61107c565b11156112d95773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112d06040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611527565b60019050611524565b60006112f873146500cfd35b22e4a392fe0adc06de1a1368ed4861107c565b11156113995773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113906040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611527565b60019050611524565b60006113b8736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47561107c565b111561141b57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611524565b600061143a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf61107c565b111561149d577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611524565b60006114bc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa61107c565b111561151f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611524565b600090505b90565b806002908051906020019061153d929190611541565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061158257805160ff19168380011785556115b0565b828001600101855582156115b0579182015b828111156115af578251825591602001919060010190611594565b5b5090506115bd91906115c1565b5090565b6115e391905b808211156115df5760008160009055506001016115c7565b5090565b905600a165627a7a723058209ccf197f809d3bbaa1aef09876708ec3b969a963afb1bc1d93d1651b6cf0df4a0029",
  "sourceMap": "70:779:1:-;;;241:83;8:9:-1;5:2;;;30:1;27;20:12;5:2;241:83:1;272:8;:6;;;:8;;;:::i;:::-;70:779;;617:227;659:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:90;;;:::i;:::-;;617:227::o;14060:306:4:-;14145:10;14166;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;;;:25;;;:::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;;;:35;;;:::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:4;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:4;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;14179:8;;;;;;;;;;;:17;;;14197:10;14179:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14179:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14179:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14179:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14179:29:4;;;;;;;;;;;;;;;;14166:42;;14252:6;14240:11;:18;14230:7;:28;14222:5;:36;14218:50;;;14267:1;14260:8;;;;;;14218:50;14312:8;;;;;;;;;;;:14;;;14333:5;14340:1;14343:10;14355:3;14312:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14312:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14312:47:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14312:47:4;;;;;;;;;;;;;;;;14305:54;;11431:1;14060:306;;;;;:::o;33861:150::-;33923:10;33989:5;33977:18;33968:27;;33954:51;;;:::o;11544:183::-;11607:4;11627:21;:19;;;:21;;;:::i;:::-;11620:28;;11544:183;;;:::o;11732:1749::-;11780:4;11855:1;11799:55;11811:42;11799:11;;;:55;;;:::i;:::-;:57;11795:245;;;11909:42;11881:3;;:71;;;;;;;;;;;;;;;;;;11966:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12025:4;12018:11;;;;11795:245;12109:1;12053:55;12065:42;12053:11;;;:55;;;:::i;:::-;:57;12049:254;;;12171:42;12143:3;;:71;;;;;;;;;;;;;;;;;;12228:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;12288:4;12281:11;;;;12049:254;12372:1;12316:55;12328:42;12316:11;;;:55;;;:::i;:::-;:57;12312:249;;;12432:42;12404:3;;:71;;;;;;;;;;;;;;;;;;12489:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;12546:4;12539:11;;;;12312:249;12630:1;12574:55;12586:42;12574:11;;;:55;;;:::i;:::-;:57;12570:253;;;12692:42;12664:3;;:71;;;;;;;;;;;;;;;;;;12749:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12808:4;12801:11;;;;12570:253;12892:1;12836:55;12848:42;12836:11;;;:55;;;:::i;:::-;:57;12832:201;;;12954:42;12926:3;;:71;;;;;;;;;;;;;;;;;;13018:4;13011:11;;;;12832:201;13102:1;13046:55;13058:42;13046:11;;;:55;;;:::i;:::-;:57;13042:200;;;13163:42;13135:3;;:71;;;;;;;;;;;;;;;;;;13227:4;13220:11;;;;13042:200;13311:1;13255:55;13267:42;13255:11;;;:55;;;:::i;:::-;:57;13251:202;;;13374:42;13346:3;;:71;;;;;;;;;;;;;;;;;;13438:4;13431:11;;;;13251:202;13469:5;13462:12;;11732:1749;;:::o;39326:118::-;39424:13;39400:21;:37;;;;;;;;;;;;:::i;:::-;;39326:118;:::o;70:779:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "70:779:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;114:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;114:23:1;;;;;;;;;;;;;;;;;;;;;;;332:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;332:277:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13603:146:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13603:146:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:227:1;;;;;;114:23;;;;:::o;332:277::-;414:20;:18;:20::i;:::-;400:34;;:10;:34;;;392:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:22;493:6;478:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;478:22:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:19;534:6;542:1;525:8;:19::i;:::-;511:11;:33;;;;332:277;;:::o;13603:146:4:-;;;;:::o;617:227:1:-;659:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;746:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:90::i;:::-;;617:227::o;33329:112:4:-;33389:7;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:4;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:4;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;33414:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33414:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33414:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33414:20:4;;;;;;;;;;;;;;;;33407:27;;33329:112;:::o;37565:593::-;37626:4;37642:20;37684:9;37707:13;37743:6;37671:2;37642:32;;37696:1;37684:13;;37723:5;37707:21;;37750:1;37743:8;;37738:357;37755:7;:14;37753:1;:16;37738:357;;;37808:2;37794:16;;:7;37802:1;37794:10;;;;;;;;;;;;;;;;;;;;:16;;;;;37793:38;;;;;37828:2;37814:16;;:7;37822:1;37814:10;;;;;;;;;;;;;;;;;;;;:16;;;;;37793:38;37789:295;;;37854:8;37850:102;;;37894:1;37888:2;:7;37884:49;;;37897:5;;37884:49;37929:4;;;;;;;;37850:102;37977:2;37969:10;;;;38024:2;38010:7;38018:1;38010:10;;;;;;;;;;;;;;;;;;;;38005:16;;;:21;37997:29;;;;37789:295;;;38065:2;38051:16;;:7;38059:1;38051:10;;;;;;;;;;;;;;;;;;;;:16;;;;38047:37;;;38080:4;38069:15;;38047:37;37789:295;37771:3;;;;;;;37738:357;;;38113:1;38108:2;:6;38104:26;;;38128:2;38124;:6;38116:14;;;;38104:26;38147:4;38140:11;;37565:593;;;;;;;;:::o;14060:306::-;14145:10;14166;11234:1;11228:3;;;;;;;;;;;11220:15;;;11219:49;;;;11266:1;11239:25;11259:3;;;;;;;;;;;11239:11;:25::i;:::-;:28;11219:49;11216:101;;;11282:35;10950:1;11282:19;:35::i;:::-;;11216:101;11352:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11352:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11352:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11352:16:4;;;;;;;;;;;;;;;;11331:37;;11339:8;;;;;;;;;;;11331:37;;;;11328:92;;;11403:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11403:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11403:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11403:16:4;;;;;;;;;;;;;;;;11382:8;;:38;;;;;;;;;;;;;;;;;;11328:92;14179:8;;;;;;;;;;;:17;;;14197:10;14179:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14179:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14179:29:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14179:29:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14179:29:4;;;;;;;;;;;;;;;;14166:42;;14252:6;14240:11;:18;14230:7;:28;14222:5;:36;14218:50;;;14267:1;14260:8;;;;;;14218:50;14312:8;;;;;;;;;;;:14;;;14333:5;14340:1;14343:10;14355:3;14312:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14312:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14312:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14312:47:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14312:47:4;;;;;;;;;;;;;;;;14305:54;;11431:1;14060:306;;;;;:::o;33861:150::-;33923:10;33989:5;33977:18;33968:27;;33954:51;;;:::o;11544:183::-;11607:4;11627:21;:19;:21::i;:::-;11620:28;;11544:183;;;:::o;11732:1749::-;11780:4;11855:1;11799:55;11811:42;11799:11;:55::i;:::-;:57;11795:245;;;11909:42;11881:3;;:71;;;;;;;;;;;;;;;;;;11966:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12025:4;12018:11;;;;11795:245;12109:1;12053:55;12065:42;12053:11;:55::i;:::-;:57;12049:254;;;12171:42;12143:3;;:71;;;;;;;;;;;;;;;;;;12228:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12288:4;12281:11;;;;12049:254;12372:1;12316:55;12328:42;12316:11;:55::i;:::-;:57;12312:249;;;12432:42;12404:3;;:71;;;;;;;;;;;;;;;;;;12489:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12546:4;12539:11;;;;12312:249;12630:1;12574:55;12586:42;12574:11;:55::i;:::-;:57;12570:253;;;12692:42;12664:3;;:71;;;;;;;;;;;;;;;;;;12749:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12808:4;12801:11;;;;12570:253;12892:1;12836:55;12848:42;12836:11;:55::i;:::-;:57;12832:201;;;12954:42;12926:3;;:71;;;;;;;;;;;;;;;;;;13018:4;13011:11;;;;12832:201;13102:1;13046:55;13058:42;13046:11;:55::i;:::-;:57;13042:200;;;13163:42;13135:3;;:71;;;;;;;;;;;;;;;;;;13227:4;13220:11;;;;13042:200;13311:1;13255:55;13267:42;13255:11;:55::i;:::-;:57;13251:202;;;13374:42;13346:3;;:71;;;;;;;;;;;;;;;;;;13438:4;13431:11;;;;13251:202;13469:5;13462:12;;11732:1749;;:::o;39326:118::-;39424:13;39400:21;:37;;;;;;;;;;;;:::i;:::-;;39326:118;:::o;70:779:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\nimport \"./oraclize/usingOraclize.sol\";\r\n\r\ncontract EthPrice is usingOraclize {\r\n\r\n    uint public ethPriceUsd;\r\n\r\n    event LogNewEthPrice(string price);\r\n    event LogNewOraclizeQuery(string description);\r\n\r\n    function EthPrice() {\r\n        update(); // first check at contract creation\r\n    }\r\n\r\n    function __callback(bytes32 myid, string result) {\r\n        require(msg.sender == oraclize_cbAddress(), 'Caller is not Oraclize!');\r\n        emit LogNewEthPrice(result);\r\n        ethPriceUsd = parseInt(result, 2);\r\n        // ...Do something with the USD Diesel price...\r\n    }\r\n\r\n    function update() payable {\r\n        emit LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\r\n        oraclize_query(\"URL\", \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\");\r\n    }\r\n\r\n}",
  "sourcePath": "C:\\Users\\huiskamer\\Desktop\\my-awesome-oraclize-truffle-box\\contracts\\EthPrice.sol",
  "ast": {
    "absolutePath": "/C/Users/huiskamer/Desktop/my-awesome-oraclize-truffle-box/contracts/EthPrice.sol",
    "exportedSymbols": {
      "EthPrice": [
        127
      ]
    },
    "id": 128,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Users/huiskamer/Desktop/my-awesome-oraclize-truffle-box/contracts/oraclize/usingOraclize.sol",
        "file": "./oraclize/usingOraclize.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 128,
        "sourceUnit": 6254,
        "src": "28:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6253,
              "src": "91:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6253",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "91:13:1"
          }
        ],
        "contractDependencies": [
          6253
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 127,
        "linearizedBaseContracts": [
          127,
          6253
        ],
        "name": "EthPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 70,
            "name": "ethPriceUsd",
            "nodeType": "VariableDeclaration",
            "scope": 127,
            "src": "114:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "114:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 74,
            "name": "LogNewEthPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "167:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:14:1"
            },
            "src": "146:35:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 78,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "213:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:20:1"
            },
            "src": "187:46:1"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "261:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 81,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "272:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "272:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "EthPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:1"
            },
            "scope": 127,
            "src": "241:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "381:228:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6268,
                            "src": "400:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "400:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 95,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4226,
                            "src": "414:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "414:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "400:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f74204f7261636c697a6521",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "436:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fc5989bf0894d52268f6e453ace71850ea16f02827533ee8cb3637ad563aa62",
                          "typeString": "literal_string \"Caller is not Oraclize!\""
                        },
                        "value": "Caller is not Oraclize!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fc5989bf0894d52268f6e453ace71850ea16f02827533ee8cb3637ad563aa62",
                          "typeString": "literal_string \"Caller is not Oraclize!\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6271,
                        6272
                      ],
                      "referencedDeclaration": 6272,
                      "src": "392:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "392:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "392:70:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "493:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 101,
                      "name": "LogNewEthPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "478:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "EmitStatement",
                  "src": "473:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "ethPriceUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "511:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "534:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 106,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4904,
                          5003
                        ],
                        "referencedDeclaration": 5003,
                        "src": "525:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "525:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "511:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "511:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "352:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "366:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "351:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:1"
            },
            "scope": 127,
            "src": "332:277:1",
            "stateMutability": "nonpayable",
            "superFunction": 1168,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "643:201:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "679:55:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 116,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "659:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "654:81:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "761:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "768:67:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                          "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                        },
                        "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                          "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                        }
                      ],
                      "id": 120,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1258,
                        1300,
                        1346,
                        1390,
                        1433,
                        1478,
                        1527,
                        1574,
                        1621,
                        1670,
                        1723,
                        1774,
                        1811,
                        1851,
                        1894,
                        1934,
                        1979,
                        2027,
                        2078,
                        2126,
                        2179,
                        2235,
                        2294,
                        2350,
                        2411,
                        2475,
                        2542,
                        2606,
                        2675,
                        2747,
                        2822,
                        2894,
                        2941,
                        2990,
                        3043,
                        3094,
                        3131,
                        3171,
                        3214,
                        3254,
                        3299,
                        3347,
                        3398,
                        3446,
                        3499,
                        3555,
                        3614,
                        3670,
                        3731,
                        3795,
                        3862,
                        3926,
                        3995,
                        4067,
                        4142,
                        4214
                      ],
                      "referencedDeclaration": 1258,
                      "src": "746:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "746:90:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:1"
            },
            "scope": 127,
            "src": "617:227:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 128,
        "src": "70:779:1"
      }
    ],
    "src": "0:849:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/huiskamer/Desktop/my-awesome-oraclize-truffle-box/contracts/EthPrice.sol",
    "exportedSymbols": {
      "EthPrice": [
        127
      ]
    },
    "id": 128,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 65,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Users/huiskamer/Desktop/my-awesome-oraclize-truffle-box/contracts/oraclize/usingOraclize.sol",
        "file": "./oraclize/usingOraclize.sol",
        "id": 66,
        "nodeType": "ImportDirective",
        "scope": 128,
        "sourceUnit": 6254,
        "src": "28:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6253,
              "src": "91:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6253",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "91:13:1"
          }
        ],
        "contractDependencies": [
          6253
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 127,
        "linearizedBaseContracts": [
          127,
          6253
        ],
        "name": "EthPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 70,
            "name": "ethPriceUsd",
            "nodeType": "VariableDeclaration",
            "scope": 127,
            "src": "114:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "114:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 74,
            "name": "LogNewEthPrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "167:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "166:14:1"
            },
            "src": "146:35:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 78,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "213:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "212:20:1"
            },
            "src": "187:46:1"
          },
          {
            "body": {
              "id": 84,
              "nodeType": "Block",
              "src": "261:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 81,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "272:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "272:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 85,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "EthPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "258:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "261:0:1"
            },
            "scope": 127,
            "src": "241:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "381:228:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 93,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6268,
                            "src": "400:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "400:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 95,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4226,
                            "src": "414:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "414:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "400:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f74204f7261636c697a6521",
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "436:25:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fc5989bf0894d52268f6e453ace71850ea16f02827533ee8cb3637ad563aa62",
                          "typeString": "literal_string \"Caller is not Oraclize!\""
                        },
                        "value": "Caller is not Oraclize!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fc5989bf0894d52268f6e453ace71850ea16f02827533ee8cb3637ad563aa62",
                          "typeString": "literal_string \"Caller is not Oraclize!\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6271,
                        6272
                      ],
                      "referencedDeclaration": 6272,
                      "src": "392:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "392:70:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "392:70:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 102,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "493:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 101,
                      "name": "LogNewEthPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "478:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "EmitStatement",
                  "src": "473:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "ethPriceUsd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "511:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 107,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "534:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "542:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 106,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4904,
                          5003
                        ],
                        "referencedDeclaration": 5003,
                        "src": "525:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (string memory,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "525:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "511:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "511:33:1"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "352:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "366:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "351:29:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:1"
            },
            "scope": 127,
            "src": "332:277:1",
            "stateMutability": "nonpayable",
            "superFunction": 1168,
            "visibility": "public"
          },
          {
            "body": {
              "id": 125,
              "nodeType": "Block",
              "src": "643:201:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "679:55:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 116,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "659:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:76:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "654:81:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "761:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e2868747470733a2f2f6170692e636f696e626173652e636f6d2f76322f7072696365732f4554482d5553442f73706f74292e646174612e616d6f756e74",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "768:67:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                          "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                        },
                        "value": "json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cb3d5ca41f100645c3363042b531a7bc4905d034354e722c749236677568a8d",
                          "typeString": "literal_string \"json(https://api.coinbase.com/v2/prices/ETH-USD/spot).data.amount\""
                        }
                      ],
                      "id": 120,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1258,
                        1300,
                        1346,
                        1390,
                        1433,
                        1478,
                        1527,
                        1574,
                        1621,
                        1670,
                        1723,
                        1774,
                        1811,
                        1851,
                        1894,
                        1934,
                        1979,
                        2027,
                        2078,
                        2126,
                        2179,
                        2235,
                        2294,
                        2350,
                        2411,
                        2475,
                        2542,
                        2606,
                        2675,
                        2747,
                        2822,
                        2894,
                        2941,
                        2990,
                        3043,
                        3094,
                        3131,
                        3171,
                        3214,
                        3254,
                        3299,
                        3347,
                        3398,
                        3446,
                        3499,
                        3555,
                        3614,
                        3670,
                        3731,
                        3795,
                        3862,
                        3926,
                        3995,
                        4067,
                        4142,
                        4214
                      ],
                      "referencedDeclaration": 1258,
                      "src": "746:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:90:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "746:90:1"
                }
              ]
            },
            "documentation": null,
            "id": 126,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "632:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:1"
            },
            "scope": 127,
            "src": "617:227:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 128,
        "src": "70:779:1"
      }
    ],
    "src": "0:849:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "4447": {
      "events": {},
      "links": {},
      "address": "0xf12b5dd4ead5f743c6baa640b0216200e89b60da",
      "transactionHash": "0x995f51784174b3c6b6923e4412dc4cb0536642851ba23448840d779604302cbd"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-04T11:20:35.340Z"
}